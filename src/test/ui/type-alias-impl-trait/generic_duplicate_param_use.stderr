error[E0277]: `T` doesn't implement `std::fmt::Debug`
  --> $DIR/generic_duplicate_param_use.rs:8:1
   |
LL | type Two<T, U> = impl Debug;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `T` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`
...
LL | fn one<T: Debug>(t: T) -> Two<T, T> {
   |        -- help: consider further restricting this bound: `T: std::fmt::Debug +`
LL |
LL |     t
   |     - this returned value is of type `T`
   |
   = help: the trait `std::fmt::Debug` is not implemented for `T`
   = note: the type `T` must only rely on bounds defined on the type

error: defining opaque type use restricts opaque type by using the generic parameter `T` twice
  --> $DIR/generic_duplicate_param_use.rs:11:1
   |
LL | / fn one<T: Debug>(t: T) -> Two<T, T> {
LL | |
LL | |     t
LL | | }
   | |_^

error: could not find defining uses
  --> $DIR/generic_duplicate_param_use.rs:8:1
   |
LL | type Two<T, U> = impl Debug;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: aborting due to 3 previous errors

For more information about this error, try `rustc --explain E0277`.
