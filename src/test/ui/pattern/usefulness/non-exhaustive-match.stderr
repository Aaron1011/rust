error[E0004]: non-exhaustive patterns: `A` not covered
  --> $DIR/non-exhaustive-match.rs:7:11
   |
LL | enum T { A, B }
   | ---------------
   | |        |
   | |        not covered
   | `T` defined here
...
LL |     match x { T::B => { } }
   |           ^ pattern `A` not covered
   |
   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms

error[E0004]: non-exhaustive patterns: `false` not covered
  --> $DIR/non-exhaustive-match.rs:8:11
   |
LL |     match true {
   |           ^^^^ pattern `false` not covered
   |
   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms

error[E0004]: non-exhaustive patterns: `Some(_)` not covered
  --> $DIR/non-exhaustive-match.rs:11:11
   |
LL |     match Some(10) {
   |           ^^^^^^^^ pattern `Some(_)` not covered
   |
   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms

error[E0004]: non-exhaustive patterns: `(_, _, std::i32::MIN..=3i32)` and `(_, _, 5i32..=std::i32::MAX)` not covered
  --> $DIR/non-exhaustive-match.rs:14:11
   |
LL |     match (2, 3, 4) {
   |           ^^^^^^^^^ patterns `(_, _, std::i32::MIN..=3i32)` and `(_, _, 5i32..=std::i32::MAX)` not covered
   |
   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms

error[E0004]: non-exhaustive patterns: `(A, A)` not covered
  --> $DIR/non-exhaustive-match.rs:18:11
   |
LL |     match (T::A, T::A) {
   |           ^^^^^^^^^^^^ pattern `(A, A)` not covered
   |
   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms

error[E0004]: non-exhaustive patterns: `B` not covered
  --> $DIR/non-exhaustive-match.rs:22:11
   |
LL | enum T { A, B }
   | ---------------
   | |           |
   | |           not covered
   | `T` defined here
...
LL |     match T::A {
   |           ^^^^ pattern `B` not covered
   |
   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms

error[E0004]: non-exhaustive patterns: `[]` not covered
  --> $DIR/non-exhaustive-match.rs:33:11
   |
LL |     match *vec {
   |           ^^^^ pattern `[]` not covered
   |
   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms

warning: floating-point types cannot be used in patterns
  --> $DIR/non-exhaustive-match.rs:47:10
   |
LL |         [0.1, 0.2, 0.3] => (),
   |          ^^^
   |
note: lint level defined here
  --> $DIR/non-exhaustive-match.rs:1:10
   |
LL | #![allow(illegal_floating_point_literal_pattern)]
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: #[warn(illegal_floating_point_literal_pattern)] is the minimum lint level
   = note: the lint level cannot be reduced to `allow`
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #41620 <https://github.com/rust-lang/rust/issues/41620>

warning: floating-point types cannot be used in patterns
  --> $DIR/non-exhaustive-match.rs:47:15
   |
LL |         [0.1, 0.2, 0.3] => (),
   |               ^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #41620 <https://github.com/rust-lang/rust/issues/41620>

warning: floating-point types cannot be used in patterns
  --> $DIR/non-exhaustive-match.rs:47:20
   |
LL |         [0.1, 0.2, 0.3] => (),
   |                    ^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #41620 <https://github.com/rust-lang/rust/issues/41620>

warning: floating-point types cannot be used in patterns
  --> $DIR/non-exhaustive-match.rs:48:10
   |
LL |         [0.1, 0.2] => (),
   |          ^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #41620 <https://github.com/rust-lang/rust/issues/41620>

warning: floating-point types cannot be used in patterns
  --> $DIR/non-exhaustive-match.rs:48:15
   |
LL |         [0.1, 0.2] => (),
   |               ^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #41620 <https://github.com/rust-lang/rust/issues/41620>

warning: floating-point types cannot be used in patterns
  --> $DIR/non-exhaustive-match.rs:49:10
   |
LL |         [0.1] => (),
   |          ^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #41620 <https://github.com/rust-lang/rust/issues/41620>

error[E0004]: non-exhaustive patterns: `[_, _, _, _, ..]` not covered
  --> $DIR/non-exhaustive-match.rs:46:11
   |
LL |     match *vec {
   |           ^^^^ pattern `[_, _, _, _, ..]` not covered
   |
   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms

warning: floating-point types cannot be used in patterns
  --> $DIR/non-exhaustive-match.rs:47:10
   |
LL |         [0.1, 0.2, 0.3] => (),
   |          ^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #41620 <https://github.com/rust-lang/rust/issues/41620>

warning: floating-point types cannot be used in patterns
  --> $DIR/non-exhaustive-match.rs:47:15
   |
LL |         [0.1, 0.2, 0.3] => (),
   |               ^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #41620 <https://github.com/rust-lang/rust/issues/41620>

warning: floating-point types cannot be used in patterns
  --> $DIR/non-exhaustive-match.rs:47:20
   |
LL |         [0.1, 0.2, 0.3] => (),
   |                    ^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #41620 <https://github.com/rust-lang/rust/issues/41620>

warning: floating-point types cannot be used in patterns
  --> $DIR/non-exhaustive-match.rs:48:10
   |
LL |         [0.1, 0.2] => (),
   |          ^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #41620 <https://github.com/rust-lang/rust/issues/41620>

warning: floating-point types cannot be used in patterns
  --> $DIR/non-exhaustive-match.rs:48:15
   |
LL |         [0.1, 0.2] => (),
   |               ^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #41620 <https://github.com/rust-lang/rust/issues/41620>

warning: floating-point types cannot be used in patterns
  --> $DIR/non-exhaustive-match.rs:49:10
   |
LL |         [0.1] => (),
   |          ^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #41620 <https://github.com/rust-lang/rust/issues/41620>

error: aborting due to 8 previous errors

For more information about this error, try `rustc --explain E0004`.
